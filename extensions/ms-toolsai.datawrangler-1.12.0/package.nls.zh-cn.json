{"command.dataWrangler.applyOperation.title":"应用步骤","command.dataWrangler.changeKernel.title":"更改所选运行时","command.dataWrangler.clearCachedKernel.title":"清除缓存的运行时","command.dataWrangler.dataViewerClearFilters.title":"清除筛选器","command.dataWrangler.dataViewerClearSorts.title":"清除排序","command.dataWrangler.discardOperation.title":"放弃步骤","command.dataWrangler.launchDataViewer.title":"在 Data Wrangler 中启动","command.dataWrangler.openExperiments.title":"Data Wrangler 试验","command.dataWrangler.openFile.title":"打开文件","command.dataWrangler.openInDataWrangler.title":"在数据整理程序 (Data Wrangler) 中打开","command.dataWrangler.openNotebookVariable.title":"查看数据","command.dataWrangler.openSettings.title":"Data Wrangler 设置","command.dataWrangler.openSourceFileInBasicEditor.title":"基本编辑器中的开源文件","command.dataWrangler.openWalkthrough.title":"打开演练","command.dataWrangler.previewOperation.title":"执行操作","command.dataWrangler.reportIssue.title":"报告问题","command.dataWrangler.revealSourceFileInFileExplorer.title":"在资源管理器视图中显示源文件","command.dataWrangler.runPerformanceTests.title":"运行性能测试","command.dataWrangler.showTelemetryData.title":"显示遥测数据","command.dataWrangler.undoOperation.title":"撤消步骤","command.dataWrangler.walkthroughCsv.title":"打开演练 CSV 文件","configuration.dataWrangler.debug.description":"启用调试功能以排查 Data Wrangler 扩展的问题。","configuration.dataWrangler.enabledFileTypes.csv.description":"以逗号分隔的值","configuration.dataWrangler.enabledFileTypes.description":"要提供的使用 Data Wrangler 打开的文件扩展名。","configuration.dataWrangler.enabledFileTypes.parquet.description":"Apache Parquet","configuration.dataWrangler.enabledFileTypes.tsv.description":"制表符分隔值","configuration.dataWrangler.enabledFileTypes.xls.description":"Excel 97-2003 工作簿","configuration.dataWrangler.enabledFileTypes.xlsx.description":"Excel 工作簿","configuration.dataWrangler.experiments.autoDetectCsvDelimiter.markdownDescription":"**实验性**在打开 CSV 文件时自动检测分隔符。","configuration.dataWrangler.experiments.fastCsvParsing.markdownDescription":"**实验性**使用 PyArrow 引擎启用快速 CSV 分析。需要 `pyarrow` 包和 `pandas>=1.4.0`。[详细了解 Pandas 中的 PyArrow 支持](https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#specifying-the-parser-engine)。","configuration.dataWrangler.experiments.useJupyterProposedAPI.markdownDescription":"**试验性**在从笔记本打开 Data Wrangler 时使用建议的 Jupyter 扩展 API (需要 Visual Studio Code 的预发行版 Jupyter 扩展)。","configuration.dataWrangler.experimentsTitle":"试验","configuration.dataWrangler.startInEditModeForNotebookEntrypoints.description":"从 Jupyter 笔记本文件输入时，直接在编辑模式下打开数据。","configuration.dataWrangler.useRelativePath.description":"为相对于连接的根目录的本地文件启用路径解析。请注意，此设置仅适用于本地解释器连接。","contributes.walkthroughs.dataWranglerWelcome.description":"只需几个步骤即可开始使用 Pandas 和 Python 清理数据。","contributes.walkthroughs.dataWranglerWelcome.steps.applyYourChanges.description":"✔ 在底部代码面板中查看生成的代码。\r\n✔ 应用该操作以将其添加到清理步骤列表。\r\n✔ 撤消或编辑“清理步骤”面板中的最后一个操作。\r\n🔎 **提示:** 尝试在“清理步骤”面板中单击“预览所有步骤的代码”。","contributes.walkthroughs.dataWranglerWelcome.steps.applyYourChanges.media.altText":"操作已提交","contributes.walkthroughs.dataWranglerWelcome.steps.applyYourChanges.title":"步骤 3: 应用更改","contributes.walkthroughs.dataWranglerWelcome.steps.cleanDataUsingOperations.description":"浏览内置数据清理操作的列表，或使用代码编辑器编写自己的数据清理操作。数据网格将使用更改内容的实时预览进行更新。\r\n🧪 **提示:** 试用我们的[试验](command:dataWrangler.openExperiments)以启用新功能。","contributes.walkthroughs.dataWranglerWelcome.steps.cleanDataUsingOperations.media.altText":"删除列操作的差异","contributes.walkthroughs.dataWranglerWelcome.steps.cleanDataUsingOperations.title":"步骤 2: 使用操作清理数据","contributes.walkthroughs.dataWranglerWelcome.steps.exportYourCode.description":"在顶部，你将找到用于将所有代码导出回笔记本、创建脚本或将干净数据另存为 CSV 的按钮。","contributes.walkthroughs.dataWranglerWelcome.steps.exportYourCode.media.altText":"导出回笔记本","contributes.walkthroughs.dataWranglerWelcome.steps.exportYourCode.title":"步骤 4: 导出代码或数据","contributes.walkthroughs.dataWranglerWelcome.steps.openDataWrangler-web-variant.description":"**从 Jupyter Notebook:** 带有 Data Wrangler 徽标的按钮应出现在显示数据帧的代码输出(如 ``df.head()``)的正上方。\r\n🔎 请查看我们的[文档](https://github.com/microsoft/vscode-data-wrangler)以了解详细信息。","contributes.walkthroughs.dataWranglerWelcome.steps.openDataWrangler.description":"**从 Jupyter Notebook:** 带有 Data Wrangler 徽标的按钮应出现在显示数据帧的代码输出(如 ``df.head()``)的正上方。\r\n**从 Visual Studio Code 的文件资源管理器:** 右键单击 CSV 文件以使用 Data Wrangler 将其打开。\r\n[在 Data Wrangler 中打开文件](command:dataWrangler.openFile)\r\n🔎 请查看我们的[文档](https://github.com/microsoft/vscode-data-wrangler)以了解详细信息。","contributes.walkthroughs.dataWranglerWelcome.steps.openDataWrangler.media.altText":"Data Wrangler 的入口点","contributes.walkthroughs.dataWranglerWelcome.steps.openDataWrangler.title":"步骤 1: 打开 Data Wrangler","contributes.walkthroughs.dataWranglerWelcome.steps.openTitanicCSV.description":"通过 Kaggle 中的 Titanic 数据集试用 Data Wrangler\r\n[打开 Titanic 数据集](command:dataWrangler.walkthroughCsv)\r\n🔎 请查看我们的[文档](https://github.com/microsoft/vscode-data-wrangler)以了解详细信息。","contributes.walkthroughs.dataWranglerWelcome.steps.openTitanicCSV.media.altText":"打开 Titanic 数据集","contributes.walkthroughs.dataWranglerWelcome.steps.openTitanicCSV.title":"尝试使用 Titanic 数据集","contributes.walkthroughs.dataWranglerWelcome.title":"Data Wrangler 入门"}
